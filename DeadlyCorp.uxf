<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="15.1">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>483</x>
      <y>70</y>
      <w>245</w>
      <h>399</h>
    </coordinates>
    <panel_attributes>Game
--
-isRunning: bool
-isSameDay: bool
-isLanded: bool
-dayNum: int
-quota: int
-balance: int
-cargoBalance: int
-employees: int
-moon: shared_ptr&lt;AbstractMoon&gt;
-items: vector&lt;shared_ptr&lt;Item&gt; &gt;
-itemManager: ItemManager
-moonManager: MoonManager
+myGenerator: mt19937
--
+Game()
+run(): void
+land(): void
+leave(): void
+gameExit(): void

+getQuota() const : int
+getBalance() const : int
+getCargoValue() const : int
+getEmployees() const : int
+getMoonNameLower() const : const string
+getMoonName() const : const string
+getItems() const : const vector&lt;shared_ptr&lt;Item&gt; &gt;&amp;

+setBalance(value: int) : void
+setCargoBalance(value: int) : void
+clearCargoBalance() : void
+setEmployees(value: int) : void
+setMoon(moon: shared_ptr&lt;AbstractMoon&gt;) : void
+addItem(item: shared_ptr&lt;Item&gt;) : void


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>875</x>
      <y>196</y>
      <w>266</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>MoonManager
--
-moons : vector&lt;shared_ptr&lt;AbstractMoon&gt; &gt;  

--
+registerMoon(moon: AbstractMoon*) : void
+getStartingMoon() const : std::shared_ptr&lt;AbstractMoon&gt;
+displayMoons(balance: int&amp;) : void
+onDayBegin(g: Game&amp;) : void
+route(args: std::vector&lt;std::string&gt;, g: Game&amp;) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>525</x>
      <y>567</y>
      <w>238</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>ItemManager
--
-items: vector&lt;shared_ptr&lt;Item&gt; &gt;

--
+registerItem(item: Item*) : void
+displayItems(balance: int&amp;) : void
+buy(args: std::vector&lt;std::string&gt;, g: Game&amp;) : void
+inventory(g: Game&amp;) const : void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>777</x>
      <y>644</y>
      <w>238</w>
      <h>154</h>
    </coordinates>
    <panel_attributes>/AbstractMoon/
--
-name: std::string
#weather: MoonWeather
--
+AbstractMoon(name: std::string)
+name() const : const std::string&amp;
+onDayBegin(g: Game&amp;) : void
+landingMessage() const : virtual void
+sendEmployees(g: Game&amp;, count: int) : virtual void
+sellCargo(g: Game&amp;, amount: int) : virtual void
+onNavigate(g: Game&amp;) const : virtual bool
+print() const : virtual void
+getWeather() const : std::string</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1078</x>
      <y>700</y>
      <w>70</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>&lt;&lt;enumeration&gt;&gt;
MoonWeather
--
+Clear = 0
+Flooded
+Eclisped
+Stormy </panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>819</x>
      <y>406</y>
      <w>336</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>Moon
--
-minLootValue: int
-maxLootValue: int
-baseSurvival: float
-weatherMatrix: const float[4][3]
--
+Moon(name: std::string, minValue: int, maxValue: int, baseSurvival: float)
+onDayBegin(g: Game&amp;) : void
+landingMessage() const : void
+sendEmployees(g: Game&amp;, count: int) : void
+sellCargo(g: Game&amp;, amount: int) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>595</x>
      <y>462</y>
      <w>63</w>
      <h>119</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1
creates v</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>721</x>
      <y>231</y>
      <w>168</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1
creates &gt;</panel_attributes>
    <additional_attributes>10.0;20.0;220.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>721</x>
      <y>448</y>
      <w>112</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2= 0..n
instantiates &gt;</panel_attributes>
    <additional_attributes>10.0;20.0;140.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>896</x>
      <y>294</y>
      <w>70</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=0..n
manages v</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>868</x>
      <y>532</y>
      <w>21</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;160.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>595</x>
      <y>770</y>
      <w>532</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=-
uses &gt;</panel_attributes>
    <additional_attributes>10.0;30.0;10.0;80.0;740.0;80.0;740.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>203</x>
      <y>567</y>
      <w>245</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>Item
--
-name: string
-bought: bool
-price: int
-scrapValMult: float
-explorerSurvivalMult: float
-opSurvivalMult: float
-saveChance: float
-lootRecovMult: float
--
+Item(name: std::string, price: int, scrapValMult: float, 
explorerSurvivalMult: float, opSurvivalMult: float, 
saveChance: float, lootRecovMult: float)
+getName() const : string
+isBought() const : bool
+buy() : void
+getPrice() const : int
+getScrapValMult() const : float
+getEpSurvivalMult() const : float
+getOpSurvivalMult() const : float
+getSaveChance() const : float
+getLootRecovMult() const : float</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>406</x>
      <y>448</y>
      <w>91</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2= 0..n
&lt; instantiates</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>441</x>
      <y>581</y>
      <w>98</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=0..n
&lt; manages</panel_attributes>
    <additional_attributes>120.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>511</x>
      <y>707</y>
      <w>203</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>CorpMoon
--

--
+CorpMoon(name: std::string) : void
+landingMessage() const : void
+sendEmployees(g: Game&amp;, count: int) : void
+sellCargo(g: Game&amp;, amount: int) : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>602</x>
      <y>672</y>
      <w>189</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>250.0;10.0;10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1218</x>
      <y>427</y>
      <w>399</w>
      <h>98</h>
    </coordinates>
    <panel_attributes>PaidMoon
--
-price : int
--
+PaidMoon(name: std::string, minValue: int, maxValue: int, baseSurvival: float, price: int)
+onNavigate(g: Game&amp;) const : bool
+print() const : void</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1148</x>
      <y>476</y>
      <w>84</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;100.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1141</x>
      <y>518</y>
      <w>203</w>
      <h>217</h>
    </coordinates>
    <panel_attributes>lt=-
&lt; uses</panel_attributes>
    <additional_attributes>230.0;10.0;230.0;290.0;10.0;290.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1099</x>
      <y>532</y>
      <w>49</w>
      <h>182</h>
    </coordinates>
    <panel_attributes>lt=-
uses v</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;240.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>119</x>
      <y>399</y>
      <w>448</w>
      <h>462</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2= 0..n
instantiates v</panel_attributes>
    <additional_attributes>520.0;10.0;10.0;10.0;10.0;640.0;590.0;640.0;590.0;560.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>721</x>
      <y>105</y>
      <w>616</w>
      <h>336</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2= 0..n
instantiates &gt;</panel_attributes>
    <additional_attributes>10.0;20.0;830.0;20.0;830.0;460.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1008</x>
      <y>721</y>
      <w>84</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>lt=-
share file</panel_attributes>
    <additional_attributes>10.0;20.0;100.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1134</x>
      <y>266</y>
      <w>168</w>
      <h>175</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=0..n
manages v</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;10.0;150.0;230.0</additional_attributes>
  </element>
</diagram>
